%% confusion_matrix
% This function shows the confusion matrix and the accuracy
%
% fig = confusion_matrix(data, accuracy, bg_color)
%
% input:
%   data is the confusion matrix data ([truePAT falseHC; falsePAT trueHC])
%   accuracy is the accuracy value (optional)
%   bg_color is the background color in RGB 0-1 (optional)
%
% output:
%   fig is the figure which shows the confusion matrix and the accuracy
%       value


function fig = confusion_matrix(data, accuracy, bg_color)
    if nargin == 1
        bg_color = [0.67 0.98 0.92];
    end
    fig = figure('Color', bg_color, 'NumberTitle', 'off', ...
    	'Name', 'Confusion Matrix');
    
    t = 0;
    if nargin > 1
        t = 0.1;
        annotation(fig, 'textbox', [0.4 0.1 0.4 0.1],...
            'String', {char_check(strcat("Accuracy: ", ...
            string(accuracy)))}, 'FontSize', 12, 'FontName', 'Arial',...
            'LineStyle', 'none', 'EdgeColor',[0 0 0], 'LineWidth', 2 , ...
            'BackgroundColor', bg_color, 'VerticalAlignment', 'middle', ...
            'Color', [0 0 0]);
    end
    
    annotation(fig, 'textbox', [0.4 0.6+t 0.2 0.2], 'String', ...
        {'PAT predicted'}, 'FontSize', 10, 'FontName', 'Arial', ...
        'LineStyle', '-', 'EdgeColor',[0 0 0], 'LineWidth', 2, ...
        'BackgroundColor', bg_color, 'VerticalAlignment', 'middle', ...
        'HorizontalAlignment', 'center', 'Color', [0 0 0]);
   
    annotation(fig, 'textbox', [0.6 0.6+t 0.2 0.2], 'String', ...
        {'HC predicted'}, 'FontSize', 10, 'FontName', 'Arial', ...
        'LineStyle', '-', 'EdgeColor',[0 0 0], 'LineWidth', 2 , ...
        'BackgroundColor', bg_color, 'VerticalAlignment', 'middle', ...
        'HorizontalAlignment', 'center', 'Color', [0 0 0]);
    
    annotation(fig, 'textbox', [0.2 0.4+t 0.2 0.2], ...
        'String', {'PAT'}, 'FontSize', 10, 'FontName', 'Arial', ...
        'LineStyle', '-', 'EdgeColor',[0 0 0], 'LineWidth', 2 , ...
        'BackgroundColor', bg_color, 'VerticalAlignment', 'middle', ...
        'HorizontalAlignment', 'center', 'Color', [0 0 0]);

    annotation(fig, 'textbox', [0.2 0.2+t 0.2 0.2], ...
        'String', {'HC'}, 'FontSize', 10, 'FontName', 'Arial',...
        'LineStyle', '-', 'EdgeColor',[0 0 0], 'LineWidth', 2 , ...
        'BackgroundColor', bg_color, 'VerticalAlignment', 'middle', ...
        'HorizontalAlignment', 'center', 'Color', [0 0 0]);

    text_color = (data(1, 1)>0.5)*ones(1, 3);
    annotation(fig, 'textbox', [0.4 0.4+t 0.2 0.2], ...
        'String', {char_check(string(data(1, 1)))}, 'FontSize', 14, ...
        'FontName', 'Arial', 'VerticalAlignment', 'middle', ...
        'HorizontalAlignment', 'center', 'LineStyle', '-', ...
        'EdgeColor', [0 0 0], 'LineWidth', 2 , 'BackgroundColor', ...
        [1-data(1, 1) 0 data(1, 1)], 'Color', text_color);
    
    text_color = (data(1, 2)>0.5)*ones(1, 3);
    annotation(fig, 'textbox', [0.6 0.4+t 0.2 0.2], ...
        'String', {char_check(string(data(1, 2)))}, 'FontSize', 14, ...
        'FontName', 'Arial', 'VerticalAlignment', 'middle', ...
        'HorizontalAlignment', 'center', 'LineStyle', '-', ...
        'EdgeColor', [0 0 0], 'LineWidth', 2 , 'BackgroundColor', ...
        [1-data(1, 2) 0 data(1, 2)], 'Color', text_color);
    
    text_color = (data(2, 1)>0.5)*ones(1, 3);
    annotation(fig, 'textbox', [0.4 0.2+t 0.2 0.2], ...
        'String', {char_check(string(data(2, 1)))}, 'FontSize', 14, ...
        'FontName', 'Arial', 'VerticalAlignment', 'middle', ...
        'HorizontalAlignment', 'center', 'LineStyle', '-', ...
        'EdgeColor', [0 0 0], 'LineWidth', 2 , 'BackgroundColor', ...
        [1-data(2, 1) 0 data(2, 1)], 'Color', text_color);
    
    text_color = (data(2, 2)>0.5)*ones(1, 3);
    annotation(fig, 'textbox', [0.6 0.2+t 0.2 0.2], ...
        'String', {char_check(string(data(2, 2)))}, 'FontSize', 14, ...
        'FontName', 'Arial', 'VerticalAlignment', 'middle', ...
        'HorizontalAlignment', 'center', 'LineStyle', '-', ...
        'EdgeColor', [0 0 0], 'LineWidth', 2 , 'BackgroundColor', ...
        [1-data(2, 2) 0 data(2, 2)], 'Color', text_color);
end